geom_boxplot() +
labs(title = "Price Distribution by Vehicle Type",
x = "Type of Vehicle",
y = "Price (USD)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
print(correlation_matrix)
library(GGally)
ggpairs(numeric_vars)
regression_model <- lm(price ~ engine_size + horsepower + curb_weight + age, data = auto_Info)
summary(regression_model)
plot(regression_model, which = 2)
View(correlation_matrix)
View(auto_Info)
View(anova_result)
View(anova_result)
View(numeric_vars)
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size, y = price)) +
geom_point(alpha = 0.6) + # Add points
geom_smooth(method = "lm", col = "blue") + # Add a linear trend line
labs(title = "Price vs. Engine Size",
x = "Engine Size (Liters)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Price vs. Horsepower",
x = "Horsepower (hp)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "green4") +
labs(title = "Price vs. Curb Weight",
x = "Curb Weight (lbs)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = age, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "purple") +
labs(title = "Price vs. Age",
x = "Age of the Car (Years)",
y = "Price (USD)") +
theme_minimal()
library(corrplot)
library(corrplot)
library(ggplot2)
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
corrplot(correlation_matrix,
method = "color",         # Use color to represent the correlation value
type = "lower",           # Show only the lower triangle of the matrix
tl.col = "black",         # Set the color of the text labels to black
tl.srt = 90,              # Rotate the text labels 90 degrees for better readability
addCoef.col = "white",    # Optionally, add correlation coefficients in white text
number.cex = 0.7)         # Adjust the size of the correlation coefficients
install.packages("corrplot")
library(corrplot)
library(corrplot)
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
corrplot(correlation_matrix,
method = "color",         # Use color to represent the correlation value
type = "lower",           # Show only the lower triangle of the matrix
tl.col = "black",         # Set the color of the text labels to black
tl.srt = 90,              # Rotate the text labels 90 degrees for better readability
addCoef.col = "white",    # Optionally, add correlation coefficients in white text
number.cex = 0.7)         # Adjust the size of the correlation coefficients
library(ggplot2)
mean_price <- mean(auto_Info$price, na.rm = TRUE)
print(paste("Mean Price:", mean_price))
median_price <- median(auto_Info$price, na.rm = TRUE)
print(paste("Median Price:", median_price))
calculate_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_price <- calculate_mode(auto_Info$price)
print(paste("Mode Price:", mode_price))
ggplot(auto_Info, aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 5000, fill = "cornflowerblue", color = "white", alpha = 0.7) +
geom_density(color = "red", size = 1) +
labs(title = "Distribution of Vehicle Price",
x = "Price (USD)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "seagreen", color = "white", alpha = 0.7) +
geom_density(color = "darkgreen", size = 1) +
labs(title = "Distribution of Engine Size",
x = "Engine Size (Liters)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower)) +
geom_histogram(aes(y = ..density..), binwidth = 15, fill = "goldenrod", color = "white", alpha = 0.7) +
geom_density(color = "darkorange", size = 1) +
labs(title = "Distribution of Horsepower",
x = "Horsepower (hp)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight)) +
geom_histogram(aes(y = ..density..), binwidth = 200, fill = "indianred", color = "white", alpha = 0.7) +
geom_density(color = "darkred", size = 1) +
labs(title = "Distribution of Curb Weight",
x = "Curb Weight (lbs)",
y = "Density") +
theme_minimal()
library(ggplot2)
anova_result <- aov(price ~ vehicle_type, data = auto_Info)
summary(anova_result)
ggplot(auto_Info, aes(x = vehicle_type, y = price, fill = vehicle_type)) +
geom_boxplot() +
labs(title = "Price Distribution by Vehicle Type",
x = "Type of Vehicle",
y = "Price (USD)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
print(correlation_matrix)
library(GGally)
ggpairs(numeric_vars)
plot(regression_model, which = 2)
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size, y = price)) +
geom_point(alpha = 0.6) + # Add points
geom_smooth(method = "lm", col = "blue") + # Add a linear trend line
labs(title = "Price vs. Engine Size",
x = "Engine Size (Liters)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
central_tendency_results_df <- data.frame(
Feature = character(), Mean = numeric(), Median = numeric(),
Mode = character(), Std_Dev = numeric(), stringsAsFactors = FALSE
)
View(central_tendency_results_df)
variables_for_analysis_task3 <- c("engine_size", "horsepower", "curb_weight", "price")
central_tendency_results_df <- data.frame(
Feature = character(), Mean = numeric(), Median = numeric(),
Mode = character(), Std_Dev = numeric(), stringsAsFactors = FALSE
)
View(central_tendency_results_df)
View(central_tendency_results_df)
library(ggplot2)
mean_price <- mean(auto_Info$price, na.rm = TRUE)
print(paste("Mean Price:", mean_price))
median_price <- median(auto_Info$price, na.rm = TRUE)
print(paste("Median Price:", median_price))
calculate_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
calculate_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_price <- calculate_mode(auto_Info$price)
print(paste("Mode Price:", mode_price))
ggplot(auto_Info, aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 5000, fill = "cornflowerblue", color = "white", alpha = 0.7) +
geom_density(color = "red", size = 1) +
labs(title = "Distribution of Vehicle Price",
x = "Price (USD)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "seagreen", color = "white", alpha = 0.7) +
geom_density(color = "darkgreen", size = 1) +
labs(title = "Distribution of Engine Size",
x = "Engine Size (Liters)",
y = "Density") +
theme_minimal()
ggplot(auto_Info, aes(x = engine_size)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "seagreen", color = "white", alpha = 0.7) +
geom_density(color = "darkgreen", size = 1) +
labs(title = "Distribution of Engine Size",
x = "Engine Size (Liters)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower)) +
geom_histogram(aes(y = ..density..), binwidth = 15, fill = "goldenrod", color = "white", alpha = 0.7) +
geom_density(color = "darkorange", size = 1) +
labs(title = "Distribution of Horsepower",
x = "Horsepower (hp)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight)) +
geom_histogram(aes(y = ..density..), binwidth = 200, fill = "indianred", color = "white", alpha = 0.7) +
geom_density(color = "darkred", size = 1) +
labs(title = "Distribution of Curb Weight",
x = "Curb Weight (lbs)",
y = "Density") +
theme_minimal()
library(ggplot2)
anova_result <- aov(price ~ vehicle_type, data = auto_Info)
summary(anova_result)
ggplot(auto_Info, aes(x = vehicle_type, y = price, fill = vehicle_type)) +
geom_boxplot() +
labs(title = "Price Distribution by Vehicle Type",
x = "Type of Vehicle",
y = "Price (USD)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotates x-axis labels for better readability
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
print(correlation_matrix)
library(GGally)
ggpairs(numeric_vars)
regression_model <- lm(price ~ engine_size + horsepower + curb_weight + age, data = auto_Info)
summary(regression_model)
plot(regression_model, which = 2)
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size, y = price)) +
geom_point(alpha = 0.6) + # Add points
geom_smooth(method = "lm", col = "blue") + # Add a linear trend line
labs(title = "Price vs. Engine Size",
x = "Engine Size (Liters)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Price vs. Horsepower",
x = "Horsepower (hp)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "green4") +
labs(title = "Price vs. Curb Weight",
x = "Curb Weight (lbs)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = age, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "purple") +
labs(title = "Price vs. Age",
x = "Age of the Car (Years)",
y = "Price (USD)") +
theme_minimal()
library(corrplot)
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
corrplot(correlation_matrix,
method = "color",         # Use color to represent the correlation value
type = "lower",           # Show only the lower triangle of the matrix
tl.col = "black",         # Set the color of the text labels to black
tl.srt = 90,              # Rotate the text labels 90 degrees for better readability
addCoef.col = "white",    # Optionally, add correlation coefficients in white text
number.cex = 0.7)         # Adjust the size of the correlation coefficients
library(ggplot2)
library(ggplot2)
mean_price <- mean(auto_Info$price, na.rm = TRUE)
print(paste("Mean Price:", mean_price))
median_price <- median(auto_Info$price, na.rm = TRUE)
print(paste("Median Price:", median_price))
calculate_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_price <- calculate_mode(auto_Info$price)
print(paste("Mode Price:", mode_price))
ggplot(auto_Info, aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 5000, fill = "cornflowerblue", color = "white", alpha = 0.7) +
geom_density(color = "red", size = 1) +
labs(title = "Distribution of Vehicle Price",
x = "Price (USD)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "seagreen", color = "white", alpha = 0.7) +
geom_density(color = "darkgreen", size = 1) +
labs(title = "Distribution of Engine Size",
x = "Engine Size (Liters)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower)) +
geom_histogram(aes(y = ..density..), binwidth = 15, fill = "goldenrod", color = "white", alpha = 0.7) +
geom_density(color = "darkorange", size = 1) +
labs(title = "Distribution of Horsepower",
x = "Horsepower (hp)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight)) +
geom_histogram(aes(y = ..density..), binwidth = 200, fill = "indianred", color = "white", alpha = 0.7) +
geom_density(color = "darkred", size = 1) +
labs(title = "Distribution of Curb Weight",
x = "Curb Weight (lbs)",
y = "Density") +
theme_minimal()
library(ggplot2)
anova_result <- aov(price ~ vehicle_type, data = auto_Info)
summary(anova_result)
ggplot(auto_Info, aes(x = vehicle_type, y = price, fill = vehicle_type)) +
geom_boxplot() +
labs(title = "Price Distribution by Vehicle Type",
x = "Type of Vehicle",
y = "Price (USD)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotates x-axis labels for better readability
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
print(correlation_matrix)
library(GGally)
ggpairs(numeric_vars)
regression_model <- lm(price ~ engine_size + horsepower + curb_weight + age, data = auto_Info)
summary(regression_model)
plot(regression_model, which = 2)
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size, y = price)) +
geom_point(alpha = 0.6) + # Add points
geom_smooth(method = "lm", col = "blue") + # Add a linear trend line
labs(title = "Price vs. Engine Size",
x = "Engine Size (Liters)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Price vs. Horsepower",
x = "Horsepower (hp)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "green4") +
labs(title = "Price vs. Curb Weight",
x = "Curb Weight (lbs)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = age, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "purple") +
labs(title = "Price vs. Age",
x = "Age of the Car (Years)",
y = "Price (USD)") +
theme_minimal()
library(corrplot)
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
corrplot(correlation_matrix,
method = "color",         # Use color to represent the correlation value
type = "lower",           # Show only the lower triangle of the matrix
tl.col = "black",         # Set the color of the text labels to black
tl.srt = 90,              # Rotate the text labels 90 degrees for better readability
addCoef.col = "white",    # Optionally, add correlation coefficients in white text
number.cex = 0.7)         # Adjust the size of the correlation coefficients
ggplot(auto_Info, aes(x = age, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "purple") +
labs(title = "Price vs. Age",
x = "Age of the Car (Years)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
mean_price <- mean(auto_Info$price, na.rm = TRUE)
print(paste("Mean Price:", mean_price))
median_price <- median(auto_Info$price, na.rm = TRUE)
print(paste("Median Price:", median_price))
calculate_mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mode_price <- calculate_mode(auto_Info$price)
print(paste("Mode Price:", mode_price))
ggplot(auto_Info, aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 5000, fill = "cornflowerblue", color = "white", alpha = 0.7) +
geom_density(color = "red", size = 1) +
labs(title = "Distribution of Vehicle Price",
x = "Price (USD)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "seagreen", color = "white", alpha = 0.7) +
geom_density(color = "darkgreen", size = 1) +
labs(title = "Distribution of Engine Size",
x = "Engine Size (Liters)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower)) +
geom_histogram(aes(y = ..density..), binwidth = 15, fill = "goldenrod", color = "white", alpha = 0.7) +
geom_density(color = "darkorange", size = 1) +
labs(title = "Distribution of Horsepower",
x = "Horsepower (hp)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight)) +
geom_histogram(aes(y = ..density..), binwidth = 200, fill = "indianred", color = "white", alpha = 0.7) +
geom_density(color = "darkred", size = 1) +
labs(title = "Distribution of Curb Weight",
x = "Curb Weight (lbs)",
y = "Density") +
theme_minimal()
ggplot(auto_Info, aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 5000, fill = "cornflowerblue", color = "white", alpha = 0.7) +
geom_density(color = "red", size = 1) +
labs(title = "Distribution of Vehicle Price",
x = "Price (USD)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "seagreen", color = "white", alpha = 0.7) +
geom_density(color = "darkgreen", size = 1) +
labs(title = "Distribution of Engine Size",
x = "Engine Size (Liters)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower)) +
geom_histogram(aes(y = ..density..), binwidth = 15, fill = "goldenrod", color = "white", alpha = 0.7) +
geom_density(color = "darkorange", size = 1) +
labs(title = "Distribution of Horsepower",
x = "Horsepower (hp)",
y = "Density") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight)) +
geom_histogram(aes(y = ..density..), binwidth = 200, fill = "indianred", color = "white", alpha = 0.7) +
geom_density(color = "darkred", size = 1) +
labs(title = "Distribution of Curb Weight",
x = "Curb Weight (lbs)",
y = "Density") +
theme_minimal()
library(ggplot2)
anova_result <- aov(price ~ vehicle_type, data = auto_Info)
summary(anova_result)
ggplot(auto_Info, aes(x = vehicle_type, y = price, fill = vehicle_type)) +
geom_boxplot() +
labs(title = "Price Distribution by Vehicle Type",
x = "Type of Vehicle",
y = "Price (USD)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
print(correlation_matrix)
library(GGally)
ggpairs(numeric_vars)
regression_model <- lm(price ~ engine_size + horsepower + curb_weight + age, data = auto_Info)
summary(regression_model)
plot(regression_model, which = 2)
library(ggplot2)
ggplot(auto_Info, aes(x = engine_size, y = price)) +
geom_point(alpha = 0.6) + # Add points
geom_smooth(method = "lm", col = "blue") + # Add a linear trend line
labs(title = "Price vs. Engine Size",
x = "Engine Size (Liters)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = horsepower, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Price vs. Horsepower",
x = "Horsepower (hp)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = curb_weight, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "green4") +
labs(title = "Price vs. Curb Weight",
x = "Curb Weight (lbs)",
y = "Price (USD)") +
theme_minimal()
library(ggplot2)
ggplot(auto_Info, aes(x = age, y = price)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", col = "purple") +
labs(title = "Price vs. Age",
x = "Age of the Car (Years)",
y = "Price (USD)") +
theme_minimal()
library(corrplot)
numeric_vars <- auto_Info[, c("price", "engine_size", "horsepower", "curb_weight", "age")]
correlation_matrix <- cor(numeric_vars)
corrplot(correlation_matrix,
method = "color",         # Use color to represent the correlation value
type = "lower",           # Show only the lower triangle of the matrix
tl.col = "black",         # Set the color of the text labels to black
tl.srt = 90,              # Rotate the text labels 90 degrees for better readability
addCoef.col = "white",    # Optionally, add correlation coefficients in white text
number.cex = 0.7)         # Adjust the size of the correlation coefficients
View(auto_Info)
View(central_tendency_results_df)
View(correlation_matrix)
View(numeric_vars)
